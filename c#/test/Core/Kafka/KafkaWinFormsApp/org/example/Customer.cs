// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.10.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace org.example
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	public partial class Customer : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse(@"{""type"":""record"",""name"":""Customer"",""namespace"":""org.example"",""fields"":[{""name"":""FirstName"",""doc"":""First Name of Customer"",""type"":""string""},{""name"":""LastName"",""doc"":""Last Name of Customer"",""type"":""string""},{""name"":""Age"",""doc"":""Age at the time of registration"",""type"":""int""},{""name"":""Payment"",""doc"":""The method of payment"",""type"":{""type"":""enum"",""name"":""PaymentTypes"",""namespace"":""org.example"",""symbols"":[""Cash"",""Mastercard"",""Visa""]}},{""name"":""Height"",""doc"":""Height at the time of registration in cm"",""type"":""float""},{""name"":""Weight"",""doc"":""Weight at the time of registration in kg"",""type"":""float""},{""name"":""AutomatedEmail"",""doc"":""Field indicating if the user enrolled in marketing emails"",""type"":""boolean""}]}");
		/// <summary>
		/// First Name of Customer
		/// </summary>
		private string _FirstName;
		/// <summary>
		/// Last Name of Customer
		/// </summary>
		private string _LastName;
		/// <summary>
		/// Age at the time of registration
		/// </summary>
		private int _Age;
		/// <summary>
		/// The method of payment
		/// </summary>
		private org.example.PaymentTypes _Payment;
		/// <summary>
		/// Height at the time of registration in cm
		/// </summary>
		private float _Height;
		/// <summary>
		/// Weight at the time of registration in kg
		/// </summary>
		private float _Weight;
		/// <summary>
		/// Field indicating if the user enrolled in marketing emails
		/// </summary>
		private bool _AutomatedEmail;
		public virtual Schema Schema
		{
			get
			{
				return Customer._SCHEMA;
			}
		}
		/// <summary>
		/// First Name of Customer
		/// </summary>
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				this._FirstName = value;
			}
		}
		/// <summary>
		/// Last Name of Customer
		/// </summary>
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				this._LastName = value;
			}
		}
		/// <summary>
		/// Age at the time of registration
		/// </summary>
		public int Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				this._Age = value;
			}
		}
		/// <summary>
		/// The method of payment
		/// </summary>
		public org.example.PaymentTypes Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				this._Payment = value;
			}
		}
		/// <summary>
		/// Height at the time of registration in cm
		/// </summary>
		public float Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				this._Height = value;
			}
		}
		/// <summary>
		/// Weight at the time of registration in kg
		/// </summary>
		public float Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				this._Weight = value;
			}
		}
		/// <summary>
		/// Field indicating if the user enrolled in marketing emails
		/// </summary>
		public bool AutomatedEmail
		{
			get
			{
				return this._AutomatedEmail;
			}
			set
			{
				this._AutomatedEmail = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.FirstName;
			case 1: return this.LastName;
			case 2: return this.Age;
			case 3: return this.Payment;
			case 4: return this.Height;
			case 5: return this.Weight;
			case 6: return this.AutomatedEmail;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.FirstName = (System.String)fieldValue; break;
			case 1: this.LastName = (System.String)fieldValue; break;
			case 2: this.Age = (System.Int32)fieldValue; break;
			case 3: this.Payment = (org.example.PaymentTypes)fieldValue; break;
			case 4: this.Height = (System.Single)fieldValue; break;
			case 5: this.Weight = (System.Single)fieldValue; break;
			case 6: this.AutomatedEmail = (System.Boolean)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
